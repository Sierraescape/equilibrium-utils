! events
  * reserve change on each swap
! Better revert messages when a swap cannot be satisifed due to debt-limit/utilisation/etc
  * currently it's an arithmetic underflow
! Don't make quotes that would cause a swap to fail due to supply or borrow caps
! In _computeQuote() use vault.cash() method instead of token.balanceOf() otherwise donations could cause quoted swaps to fail
! In _computeQuote(), exactOut swaps should verify the *amount* (not quote) is withdrawable
* ConstantSum: incorporate price multipliers in quote methods
* natspec
* permit2 instead of regular approval: measure gas savings
* in constructor, check the two vaults have the correct EVC() return value
  * maybe even that they were created by the EVK factory?
? a really small swap could fail because deposit() results in 0 shares, which EVK fails on. call convertToShares() first? Seems like overkill
? pause guardian
? how should aggregators find instances
  ? factory/registry contract
  ? fake registry contract that looks at the actually installed operators for a list of accounts
  ? transparent proxy so AMM address can stay constant

docs
  low-level detail of how system works for auditors
  how to add a curve
  information for aggregators
    how to maintain quotes off-chain, including tracking cash from VaultStatus logs of underlying vaults
  note how EVK stores balance and debt in same storage slot

tests
  prices/alternate decimals
    especially quoting
  when exchange rate in vaults != 1
  uniswap callback, flash swaps
  hitting reserve/utilisation limits
